<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4=" crossorigin="anonymous"></script>
    <title>Document</title>
</head>
<body>
    <div>Socket IO</div>
    <button onclick="hello()">hello</button>
    <button onclick="study()">study</button>
    <button onclick="bye()">bye</button>

    <p id="from-data"></p>
    <form id="chat">
        <input type="text" id="user" placeholder="사용자명">
        <input type="text" id="message" placeholder="채팅내용">
        <br>
        <button>채팅</button>
        <button id="click_hello" value="안녕">hello</button><br>
        <button id="click_study" value="공부하자">study</button><br>
        <button id="click_bye" value="잘가">bye</button><br>

        
    </form>
    <script>
//         //form 가져오기
        const chatForm = document.querySelector('#chat');
        const ul = document.querySelector('ul');

        //io()가 클라이언트 소켓생성 및 연결 설정
        const socket = io();

        //보내는 이벤트
        socket.emit('new_message', {name: 'client', message: '서버접속'}, () => {

        })
        //form 이벤트
        chatForm.addEventListener('submit', (event) => {
    event.preventDefault();
    const user = chatForm.querySelector('#user');
    const message = chatForm.querySelector('#message');

;
})

        $('#click_hello').on('click', function(event) {
            const hello = chatForm.querySelector('#click_hello');
            event.preventDefault();

            socket.emit('new_message', {name: 'client', message: hello.value}, (res) => {
                const li = document.createElement('li');
                //응답으로 오는 데이터를 만들어야 한다?
                li.textContent = `${res.name}: ${res.message}`;
                ul.appendChild(li)

        })})
        $('#click_study').on('click', function() {
            event.preventDefault();

            const study = chatForm.querySelector('#click_study');
            socket.emit('new_message', {name: 'client', message: study.value}, (res) => {
                
                const li = document.createElement('li');
                //응답으로 오는 데이터를 만들어야 한다?
                li.textContent = `${res.name}: ${res.message}`;
                ul.appendChild(li)
        })})
        $('#click_bye').on('click', function() {
            event.preventDefault();

            const bye = chatForm.querySelector('#click_bye');
            socket.emit('new_message', {name: 'client', message: bye.value}, (res) => {
                const li = document.createElement('li');
                //응답으로 오는 데이터를 만들어야 한다?
                li.textContent = `${res.name}: ${res.message}`;
                ul.appendChild(li)
        })})

    // const socket = io();
    // const data = document.querySelector('#from-data')

    // function hello(){
    //     socket.emit('hello', {name: 'client', message: 'hello'});
    //     socket.on('cbHello', (res) => {
    //         msg(res)})
    // }

    // function study(){
    //     socket.emit('study', {name: 'client', message: 'study'})
    //     socket.on('cbStudy', (res) => {
    //         msg(res)})
    // }

    // function bye(){
    //     socket.emit('bye', {name: 'client', message: 'bye'})
    //     socket.on('cbBye', (res) => {
    //         msg(res)})

    // }

    // function msg(res) {
    //     data.textContent = `${res.name} : ${res.message}`
    // }
    </script>
</body>
</html>


